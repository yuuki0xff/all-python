#!/bin/bash
set -eu

all_versions=(
	2.0.1
	2.1
	2.1.1
	2.1.2
	2.1.3
	2.2
	2.2.1
	2.2.2
	2.2.3
	2.3
	2.3.1
	2.3.2
	2.3.3
	2.3.4
	2.3.5
	2.3.6
	2.3.7
	2.4
	2.4.1
	2.4.2
	2.4.3
	2.4.4
	2.4.5
	2.4.6
	2.5
	2.5.1
	2.5.2
	2.5.3
	2.5.4
	2.5.5
	2.5.6
	2.6
	2.6.1
	2.6.2
	2.6.3
	2.6.4
	2.6.5
	2.6.6
	2.6.7
	2.6.8
	2.6.9
	2.7
	2.7.1
	2.7.2
	2.7.3
	2.7.4
	2.7.5
	2.7.6
	2.7.7
	2.7.8
	2.7.9
	2.7.10
	2.7.11
	2.7.12
	2.7.13
	2.7.14
	2.7.15
	2.7.16
	2.7.17
	3.0
	3.0.1
	3.1
	3.1.1
	3.1.2
	3.1.3
	3.1.4
	3.1.5
	3.2
	3.2.1
	3.2.2
	3.2.3
	3.2.4
	3.2.5
	3.2.6
	3.3.0
	3.3.1
	3.3.2
	3.3.3
	3.3.4
	3.3.5
	3.3.6
	3.3.7
	3.4.0
	3.4.1
	3.4.2
	3.4.3
	3.4.4
	3.4.5
	3.4.6
	3.4.7
	3.4.8
	3.4.9
	3.4.10
	3.5.0
	3.5.1
	3.5.2
	3.5.3
	3.5.4
	3.5.5
	3.5.6
	3.5.7
	3.6.0
	3.6.1
	3.6.2
	3.6.3
	3.6.4
	3.6.5
	3.6.6
	3.6.7
	3.6.8
	3.6.9
	3.7.0
	3.7.1
	3.7.2
	3.7.3
	3.7.4
	3.7.5
	3.8.0
)

version_to_file_name() {
	local version=$1
	echo "Python-${version}.tgz"
}
version_to_dir_name() {
	local version=$1
	echo "Python-${version}"
}
version_to_source_url() {
	local version=$1
	local file_name=$(version_to_file_name $version)
	echo "https://www.python.org/ftp/python/${version}/${file_name}"
}

main() {
	local version
	for version in ${all_versions[@]}; do
		local url=$(version_to_source_url $version)
		local file_name=$(version_to_file_name $version)
		local dir_name=$(version_to_dir_name $version)

		# see https://bugs.python.org/issue6094
		local issue6094_workaround=
		case $version in
			2.5*|2.6*|3.0*|3.1*)
				issue6094_workaround='ENV SVNVERSION="Unversioned directory"'
				;;
		esac

		# see https://bugs.python.org/issue1706863
		local fix_issue1706863=
		case $version in
			2.5*|2.6)
				fix_issue1706863='
ADD patch/issue1706863/fix_sqlite3_setup_error.patch /patch/
RUN patch -u </patch/fix_sqlite3_setup_error.patch
				'
				;;
		esac

		local major_minor_version=$version
		case $version in
			*.*.*)
				major_minor_version=$(echo $version |sed -E 's@\.[^\.]+$@@')
				;;
		esac

		local normalize_name=
		case $version in
			3.*)
				normalize_name="
RUN cd /opt/all-python/$dir_name/bin && \
	ls -l && \
	if [ ! -f python ]; then \
		ln -s python$major_minor_version python; \
	fi
				"
				;;
		esac


		cat <<EOS
# v$version
FROM buildpack-deps as v$version
WORKDIR /build
RUN wget "$url"
RUN tar xvf $file_name
WORKDIR /build/$dir_name
RUN mkdir -p /opt/all-python/$dir_name
$issue6094_workaround
$fix_issue1706863
RUN ./configure --prefix=/opt/all-python/$dir_name
RUN make
RUN make install
$normalize_name
RUN /opt/all-python/$dir_name/bin/python -c 'print("OK")'

EOS
	done

	echo 'FROM buildpack-deps'
	for version in ${all_versions[@]}; do
		local dir_name=$(version_to_dir_name $version)
		echo "COPY --from=v$version /opt/all-python/$dir_name/ /opt/all-python/$dir_name/"
	done
	cat <<EOS
ADD bin/all-python.py /opt/all-python.py
RUN \
	cd /usr/local/bin && \
	echo '#!/bin/sh' >all-python && \
	echo 'exec /opt/all-python/Python-3.7.3/bin/python /opt/all-python.py "\$@"' >>all-python && \
	chmod +x all-python
ENTRYPOINT ["/usr/local/bin/all-python"]
EOS
}

main
